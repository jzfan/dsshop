<?php
namespace app\mobile\controller;
use think\Db;

class Memberaccount extends MobileMember
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 初次绑定手机第一步
     */
    public function bind_mobile_step1()
    {
        if (!input('post.mobile') || !preg_match('/^\d{11}$/', input('post.mobile'))) {
            ds_json_encode(10001,'请正确输入手机号',['code'=>'']);
        }
       /* if (!preg_match('/^\w{4}$/', input('post.captcha')) || !captcha_check(input('post.captcha'))) {
            ds_json_encode(10001,'验证码错误',['code'=>'']);
        }*/

        $member_model = model('member');
        $check_mobile = $member_model->getMemberInfo(array(
                                                         'member_mobile' => trim(input('post.mobile')),
                                                         'member_mobilebind' => 1
                                                     ));
        if (is_array($check_mobile) and count($check_mobile) > 0) {
            ds_json_encode(10001,'手机号码已经被绑定过',['code'=>'']);
        }
        //发送频率验证
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (!empty($member_common_info['send_acode_time'])) {
            if (date('Ymd', $member_common_info['send_acode_time']) != date('Ymd', TIMESTAMP)) {
                $data = array();
                $data['send_acodetimes'] = 0;
                $update = $member_model->editMemberCommon($data, array('member_id' => $this->member_info['member_id']));
            }
            else {
                if (TIMESTAMP - $member_common_info['send_acode_time'] < DEFAULT_CONNECT_SMS_TIME) {
                    ds_json_encode(10001,'请60秒以后再发',['code'=>'']);
                }
                else {
                    if ($member_common_info['send_acodetimes'] >= 15) {
                        ds_json_encode(10001,'今天短信已超15条，无法发送',['code'=>'']);
                    }
                }
            }
        }

        try {
            $verify_code = rand(100, 999) . rand(100, 999);
            $tpl_info = model('mailtemplates')->getTplInfo(array('mailmt_code' => 'authenticate'));
            $param = array();
            $param['send_time'] = date('Y-m-d H:i', TIMESTAMP);
            $param['verify_code'] = $verify_code;
            $param['site_name'] = config('site_name');
            $message = ds_replace_text($tpl_info['mailmt_content'], $param);
            
            //发送短信
            $result = model('smslog')->sendSms(input('post.mobile'),$message);
            
            if ($result['state']) {
                $data = array();
                $update_data['auth_code'] = $verify_code;
                $update_data['send_acode_time'] = TIMESTAMP;
                $update_data['send_acodetimes'] = Db::raw('send_acodetimes+1');
                $update = $member_model->editMemberCommon($update_data, array('member_id' => $this->member_info['member_id']));
                if (!$update) {
                    ds_json_encode(10001,'系统发生错误1');
                }
                $updates = array();
                $updates['member_mobile'] = input('post.mobile');
                $member_model->editMember(array('member_id' => $this->member_info['member_id']),$updates);
                ds_json_encode(10000, '', array('sms_time' => DEFAULT_CONNECT_SMS_TIME));
            }
            else {
                ds_json_encode(10001,$result['message']);
            }
        } catch (Exception $e) {
            ds_json_encode(10001,$e->getMessage());
        }
    }

    /**
     * 初次绑定手机第二步 - 验证短信码
     */
    public function bind_mobile_step2()
    {
        if (!input('post.auth_code') || !preg_match('/^\d{6}$/', input('post.auth_code'))) {
            ds_json_encode(10001,'请正确输入短信验证码',['code'=>'-1']);
        }
        $member_model = model('member');
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (empty($member_common_info) || !is_array($member_common_info)) {
            ds_json_encode(10001,'验证失败',['code'=>'-1']);
        }
        if (TIMESTAMP - $member_common_info['send_acode_time'] > 1800) {
            ds_json_encode(10001,'验证码已失效，请重新获取',['code'=>'-1']);
        }
        if ($member_common_info['auth_code_checktimes'] > 3) {
            ds_json_encode(10001,'输入错误次数过多，请重新获取',['code'=>'-1']);
        }
        if ($member_common_info['auth_code'] != input('post.auth_code')) {
            $data = array();
            $update_data['auth_code_checktimes'] = Db::raw('auth_code_checktimes+1');
            $update = $member_model->editMemberCommon($update_data, array('member_id' => $this->member_info['member_id']));
            if (!$update) {
                ds_json_encode(10001,'系统发生错误',['code'=>'-1']);
            }
            ds_json_encode(10001,'验证失败',['code'=>'-1']);
        }

        $data = array();
        $data['auth_code'] = '';
        $data['send_acode_time'] = 0;
        $data['auth_code_checktimes'] = 0;
        $update = $member_model->editMemberCommon($data, array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误');
        }
        $updates = array();
        $updates['member_mobilebind'] =1;
        $update = $member_model->editMember(array('member_id' => $this->member_info['member_id']),$updates);
        if (!$update) {
            ds_json_encode(10001,'系统发生错误');
        }
        ds_json_encode(10000,'',1);
    }

    /**
     * 检测会员手机是否绑定
     * 更改绑定手机 第一步 - 得到已经绑定的手机号
     * 修改密码 第一步 - 得到已经绑定的手机号
     * 修改支付密码 第一步 - 得到已经绑定的手机号
     */
    public function get_mobile_info()
    {
        $data = array();
        $data['state'] = $this->member_info['member_mobilebind'] ? true : false;
        $data['mobile'] = $data['state'] ? encrypt_show($this->member_info['member_mobile'], 4, 4) : $this->member_info['member_mobile'];
        ds_json_encode(10000, '', $data);
    }

    /**
     * 检测是否设置了支付密码
     */
    public function get_paypwd_info()
    {
        $data = array();
        $data['state'] = $this->member_info['member_paypwd'] ? true : false;
        ds_json_encode(10000, '', $data);
    }

    /**
     * 更改绑定手机 第二步 - 向已经绑定的手机发送验证码
     */
    public function modify_mobile_step2()
    {
        $this->_send_bind_mobile_msg();
    }

    /**
     * 更改密码 第二步 - 向已经绑定的手机发送验证码
     */
    public function modify_password_step2()
    {
        $this->_send_bind_mobile_msg();
    }

    /**
     * 更改支付密码第二步 - 向已经绑定的手机发送验证码
     */
    public function modify_paypwd_step2()
    {
        $this->_send_bind_mobile_msg();
    }

    private function _send_bind_mobile_msg()
    {
       /* if (!preg_match('/^\w{4}$/', input('post.captcha')) || !captcha_check(input('post.captcha'))) {
            ds_json_encode(10001,'验证码错误',['code'=>'']);
        }*/

        if (!$this->member_info['member_mobilebind'] || !$this->member_info['member_mobile']) {
            ds_json_encode(10001,'您还未绑定手机号码',['code'=>'-1']);
        }

        $member_model = model('member');
        //发送频率验证
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (!empty($member_common_info['send_acode_time'])) {
            if (date('Ymd', $member_common_info['send_acode_time']) != date('Ymd', TIMESTAMP)) {
                $data = array();
                $data['send_acodetimes'] = 0;
                $update = $member_model->editMemberCommon($data, array('member_id' => $this->member_info['member_id']));
                if (!$update) {
                    ds_json_encode(10001,'系统发生错误',['code'=>'-1']);
                }
            }
            else {
                if (TIMESTAMP - $member_common_info['send_acode_time'] < DEFAULT_CONNECT_SMS_TIME) {
                    ds_json_encode(10001,'请60秒以后再发',['code'=>'']);
                }
                else {
                    if ($member_common_info['send_acodetimes'] >= 15) {
                        ds_json_encode(10001,'今天短信已超15条，无法发送',['code'=>'']);
                    }
                }
            }
        }

        try {
            $verify_code = rand(100, 999) . rand(100, 999);
            $tpl_info = model('mailtemplates')->getTplInfo(array('mailmt_code' => 'authenticate'));
            $param = array();
            $param['send_time'] = date('Y-m-d H:i', TIMESTAMP);
            $param['verify_code'] = $verify_code;
            $param['site_name'] = config('site_name');
            $message = ds_replace_text($tpl_info['mailmt_content'], $param);
            
            //发送短信
            $result = model('smslog')->sendSms($this->member_info['member_mobile'],$message);
            
            if ($result['state']) {
                $update_data = array();
                $update_data['auth_code'] = $verify_code;
                $update_data['send_acode_time'] = TIMESTAMP;
                $update_data['send_acodetimes'] = Db::raw('send_acodetimes+1');
                $update = $member_model->editMemberCommon($update_data, array('member_id' => $this->member_info['member_id']));
                if (!$update) {
                    ds_json_encode(10001,'系统发生错误',['code'=>'']);
                }
                ds_json_encode(10000, '', array('sms_time' => DEFAULT_CONNECT_SMS_TIME,'state'=>'1'));
            }
            else {
                ds_json_encode(10001,$result['message'],['code'=>'']);
            }
        } catch (Exception $e) {
            ds_json_encode(10001,$e->getMessage(),['code'=>'']);
        }
    }

    /**
     * 更改绑定手机 第三步 - 验证短信码
     */
    public function modify_mobile_step3()
    {
        if (!input('post.auth_code') || !preg_match('/^\d{6}$/', input('post.auth_code'))) {
            ds_json_encode(10001,'请正确输入短信验证码',['code'=>'']);
        }
        $member_model = model('member');
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (empty($member_common_info) || !is_array($member_common_info)) {
            ds_json_encode(10001,'验证失败',['code'=>'']);
        }
        if (TIMESTAMP - $member_common_info['send_acode_time'] > 1800) {
            ds_json_encode(10001,'验证码已失效，请重新获取',['code'=>'']);
        }
        if ($member_common_info['auth_code_checktimes'] > 3) {
            ds_json_encode(10001,'输入错误次数过多，请重新获取',['code'=>'']);
        }
        if ($member_common_info['auth_code'] != input('post.auth_code')) {
            $update_data = array();
            $update_data['auth_code_checktimes'] = Db::raw('auth_code_checktimes+1');
            $update = $member_model->editMemberCommon($update_data, array('member_id' => $this->member_info['member_id']));
            if (!$update) {
                ds_json_encode(10001,'系统发生错误1',['code'=>'']);
            }
            ds_json_encode(10001,'验证失败',['code'=>'']);
        }

        $data = array();
        $data['auth_code'] = '';
        $data['send_acode_time'] = 0;
        $data['auth_code_checktimes'] = 0;
        $update = $member_model->editMemberCommon($data, array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误2',['code'=>'']);
        }
        $data = array();
        $data['member_mobile'] = '';
        $data['member_mobilebind'] = 0;
        $update = $member_model->editMember(array('member_id' => $this->member_info['member_id']), $data);
        if (!$update) {
            ds_json_encode(10001,'系统发生错误3',['code'=>'']);
        }
        ds_json_encode(10000, '', 1);    }

    /**
     * 更改密码 第三步 - 验证短信码
     */
    public function modify_password_step3()
    {
        $this->_modify_pwd_check_vcode();
    }

    /**
     * 更改支付密码 第三步 - 验证短信码
     */
    public function modify_paypwd_step3()
    {
        $this->_modify_pwd_check_vcode();
    }

    public function _modify_pwd_check_vcode()
    {
        if (!input('post.auth_code') || !preg_match('/^\d{6}$/', input('post.auth_code'))) {
            ds_json_encode(10001,'请正确输入短信验证码',['code'=>'']);
        }
        $member_model = model('member');
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (empty($member_common_info) || !is_array($member_common_info)) {
            ds_json_encode(10001,'验证失败',['code'=>'']);
        }
        if (TIMESTAMP - $member_common_info['send_acode_time'] > 1800) {
            ds_json_encode(10001,'验证码已失效，请重新获取');
        }
        if ($member_common_info['auth_code_checktimes'] > 3) {
            ds_json_encode(10001,'输入错误次数过多，请重新获取');
        }
        if ($member_common_info['auth_code'] != input('post.auth_code')) {
            $data = array();
            $update_data['auth_code_checktimes'] = Db::raw('auth_code_checktimes+1');
            $update = $member_model->editMemberCommon($update_data, array('member_id' => $this->member_info['member_id']));
            if (!$update) {
                ds_json_encode(10001,'系统发生错误a');
            }
            ds_json_encode(10001,'验证失败');
        }

        $data = array();
        $data['auth_code'] = '';
        $data['send_acode_time'] = 0;
        $data['auth_code_checktimes'] = 0;
        $update = $member_model->editMemberCommon($data, array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误b');
        }

        //更改密码授权
        $update = $member_model->editMemberCommon(array('auth_modify_pwdtime' => TIMESTAMP), array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误c',['code'=>'']);
        }

        ds_json_encode(10000, '', 1);    }

    /**
     * 更改密码 第四步 - 检查是否有权修改密码
     */
    public function modify_password_step4()
    {
        $this->_modify_pwd_limit_check();
        ds_json_encode(10000,'',1);
    }

    /**
     * 更改支付密码 第四步 - 检查是否有权修改密码
     */
    public function modify_paypwd_step4()
    {
        $this->_modify_pwd_limit_check();
        ds_json_encode(10000,'',1);
    }

    private function _modify_pwd_limit_check()
    {
        //身份验证后，需要在30分钟内完成修改密码操作
        $member_model = model('member');
        $member_common_info = $member_model->getMemberCommonInfo(array('member_id' => $this->member_info['member_id']));
        if (empty($member_common_info) || !is_array($member_common_info)) {
            ds_json_encode(10001,'验证失败',['code'=>'']);
        }
        if ($member_common_info['auth_modify_pwdtime'] && TIMESTAMP - $member_common_info['auth_modify_pwdtime'] > 1800) {
            ds_json_encode(10001,'操作超时，请重新获取短信验证码',['code'=>'']);
        }
    }

    /**
     * 更改密码 第五步 - 保存新密码到数据库
     */
    public function modify_password_step5()
    {

        if (!input('post.password') || !input('post.password1') || input('post.password') != input('post.password1')) {
            ds_json_encode(10001,'提交数据错误',['code'=>'']);
        }

        //身份验证后，需要在30分钟内完成修改密码操作
        $this->_modify_pwd_limit_check();

        $member_model = model('member');

        $update = $member_model->editMember(array('member_id' => $this->member_info['member_id']), array('member_password' => md5(input('post.password'))));
        if (!$update) {
            ds_json_encode(10001,'密码修改失败',['code'=>'']);
        }

        $update = $member_model->editMemberCommon(array('auth_modify_pwdtime' => '0'), array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误',['code'=>'']);
        }
        ds_json_encode(10000,'',1);
    }

    /**
     * 更改支付密码 第五步 - 保存新密码到数据库
     */
    public function modify_paypwd_step5()
    {

        if (!input('post.password') || !input('post.password1') || input('post.password') != input('post.password1')) {
            ds_json_encode(10001,'提交数据错误',['code'=>'']);
        }

        //身份验证后，需要在30分钟内完成修改密码操作
        $this->_modify_pwd_limit_check();

        $member_model = model('member');
        $update = $member_model->editMember(array('member_id' => $this->member_info['member_id']), array('member_paypwd' => md5(input('post.password'))));
        if (!$update) {
            ds_json_encode(10001,'密码修改失败',['code'=>'']);
        }

        $update = $member_model->editMemberCommon(array('auth_modify_pwdtime' => '0'), array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误',['code'=>'']);
        }
        ds_json_encode(10000,'',1);
    }

    /**
     * 验证输入支付密码是否正确
     */
    public function check_paypwd()
    {
        if (!input('post.password')) {
            ds_json_encode(10001,'未输入支付密码',['code'=>'']);
        }
       /* if (!preg_match('/^\w{4}$/', input('post.captcha')) || !captcha_check(input('post.captcha'))) {
            ds_json_encode(10001,'验证码错误',['code'=>'']);
        }*/
        if (md5(input('post.password')) != $this->member_info['member_paypwd']) {
            ds_json_encode(10001,'支付密码输入不正确',['code'=>'']);
        }

        $member_model = model('member');
        $data = array();
        $data['member_mobile'] = '';
        $data['member_mobilebind'] = 0;
        $update = $member_model->editMember(array('member_id' => $this->member_info['member_id']), $data);
        if (!$update) {
            ds_json_encode(10001,'系统发生错误');
        }
        //授权绑定新手机
        $update = $member_model->editMemberCommon(array('auth_modify_pwdtime' => TIMESTAMP), array('member_id' => $this->member_info['member_id']));
        if (!$update) {
            ds_json_encode(10001,'系统发生错误');
        }
        ds_json_encode(10000,'',1);
    }
}