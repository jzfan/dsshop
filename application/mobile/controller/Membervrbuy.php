<?php
namespace app\mobile\controller;
class Membervrbuy extends MobileMember
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 虚拟商品购买第一步，设置购买数量
     * POST
     * 传入：cart_id:商品ID，quantity:购买数量
     */
    public function buy_step1() {
        $logic_buyvirtual = model('buyvirtual', 'logic');
        $result = $logic_buyvirtual->getBuyStep2Data(input('post.cart_id'), input('post.quantity'), $this->member_info['member_id']);
        if (!$result['code']) {
            ds_json_encode(10001,$result['msg']);
        } else {
            $result = $result['data'];
        }
        unset($result['member_info']);
        ds_json_encode(10000, '', $result);
    }

    /**
     * 虚拟商品购买第二步，设置接收手机号
     * POST
     * 传入：goods_id:商品ID，quantity:购买数量
     */
    public function buy_step2()
    {

        $logic_buyvirtual = model('buyvirtual','logic');
        $result = $logic_buyvirtual->getBuyStep2Data(input('post.goods_id'), input('post.quantity'), $this->member_info['member_id']);
        if (!$result['code']) {
            ds_json_encode(10001,$result['msg']);
        }
        else {
            $result = $result['data'];
            $member_info = array();
            $member_info['member_mobile'] = $result['member_info']['member_mobile'];
            $member_info['available_predeposit'] = $result['member_info']['available_predeposit'];
            $member_info['available_rc_balance'] = $result['member_info']['available_rc_balance'];
            unset($result['member_info']);
            $result['member_info'] = $member_info;
            ds_json_encode(10000, '', $result);
        }
    }

    /**
     * 虚拟订单第三步，产生订单
     * POST
     * 传入：goods_id:商品ID，quantity:购买数量，buyer_phone：接收手机，buyer_msg:下单留言,pd_pay:是否使用预存款支付0否1是，password：支付密码
     */
    public function buy_step3()
    {
        $logic_buyvirtual = model('buyvirtual','logic');
        $input = array();
        $input['goods_id'] = input('post.goods_id');
        $input['quantity'] = input('post.quantity');
        $input['buyer_phone'] = input('post.buyer_phone');
        $input['buyer_msg'] = input('post.buyer_msg');
        //支付密码
        $input['password'] = !empty(input('post.password'))?input('post.password'):'';

        //是否使用充值卡支付0是/1否
        $input['rcb_pay'] = !empty(input('post.rcb_pay'))?'0':'1';

        //是否使用预存款支付0是/1否
        $input['pd_pay'] = !empty(input('post.pd_pay'))?'0':'1';

        $input['order_from'] = 2;
        $result = $logic_buyvirtual->buyStep3($input, $this->member_info['member_id']);
        if (!$result['code']) {
            ds_json_encode(10001,$result['msg']);
        }
        else {
            ds_json_encode(10000, '',$result['data']);
        }
    }


    /**
     * 验证密码
     */
    public function check_password()
    {
        if (empty(input('post.password'))) {
            ds_json_encode(10001,'参数错误');
        }

        $member_model = model('member');

        $member_info = $member_model->getMemberInfoByID($this->member_info['member_id']);
        if ($member_info['member_paypwd'] == md5(input('post.password'))) {
            ds_json_encode(10000,'',1);
        }
        else {
            ds_json_encode(10001,'密码错误');
        }
    }

    /**
     * 更换收货地址
     */
    public function change_address()
    {
        $logic_buy = model('buy','logic');
        $city_id=0;
        if (empty(input('post.city_id'))) {
            $city_id = input('post.area_id');
        }

        $data = $logic_buy->changeAddr(input('post.freight_hash'), $city_id, input('post.area_id'), $this->member_info['member_id']);
        if (!empty($data) && $data['state'] == 'success') {
            ds_json_encode(10000, '', $data);
        }
        else {
            ds_json_encode(10001,'地址修改失败');
        }
    }


    /**
     * 支付方式
     */
    public function pay()
    {
        $pay_sn = input('post.pay_sn');
        $condition = array();
        $condition['order_sn'] = $pay_sn;
        $order_info = model('vrorder')->getVrorderInfo($condition);
        
        $condition = array();
        $condition['payment_platform'] = 'h5';
        $payment_list = model('payment')->getPaymentOpenList($condition);

        $pay_info['pay_amount'] = $order_info['order_amount'];
        $pay_info['member_available_pd'] = $this->member_info['available_predeposit'];
        $pay_info['member_available_rcb'] = $this->member_info['available_rc_balance'];

        $pay_info['member_paypwd'] = true;
        if (empty($this->member_info['member_paypwd'])) {
            $pay_info['member_paypwd'] = false;
        }

        $pay_info['pay_sn'] = $order_info['order_sn'];
        $pay_info['payed_amount'] = $order_info['pd_amount'];
        if ($pay_info['payed_amount'] > '0.00') {
            $pay_info['pay_amount'] = $pay_info['pay_amount'] - $pay_info['payed_amount'];
        }

        $pay_in["pay_info"] = $pay_info;
        $pay_in["pay_info"]["payment_list"] = $payment_list;
        ds_json_encode(10000, '', $pay_in);
    }

    /**
     * 支付密码确认
     */
    public function check_pd_pwd()
    {
        if ($this->member_info['member_paypwd'] != md5(input('post.password'))) {
            ds_json_encode(10001,'支付密码错误');
        }
        else {
            ds_json_encode(10000, '', 'OK');
        }
    }
}