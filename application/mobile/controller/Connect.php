<?php
namespace app\mobile\controller;
class Connect extends MobileMall
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 新浪微博登陆
     */
    public function get_sina_oauth2() {
        $this->redirect('api/oa_sina');
    }

    /**
     * QQ登陆
     */
    public function get_qq_oauth2() {
        $this->redirect('api/oa_qq');
    }


    /**
     * 短信动态码
     */
    public function get_sms_captcha(){
        $state = '发送失败';
        $sms_mobile = input('get.phone');
        if (strlen($sms_mobile) == 11){
            $log_type = input('get.type');//短信类型:1为注册,2为登录,3为找回密码
                
            $state = 'true';
            $member_model = model('member');
            $member = $member_model->getMemberInfo(array('member_mobile' => $sms_mobile));
            $sms_captcha = rand(100000, 999999);
            $log_msg = '【' . config('site_name') . '】您于' . date("Y-m-d");
            switch ($log_type) {
                case '1':
                    if (config('sms_register') != 1) {
                        $state = '系统没有开启手机注册功能';
                    }
                    if (!empty($member)) {//检查手机号是否已被注册
                        $state = '当前手机号已被注册，请更换其他号码。';
                    }
                    $log_msg .= '申请注册会员，动态码：' . $sms_captcha . '。';
                    break;
                case '2':
                    if (config('sms_login') != 1) {
                        $state = '系统没有开启手机登录功能';
                    }
                    if (empty($member)) {//检查手机号是否已绑定会员
                        $state = '当前手机号未注册，请检查号码是否正确。';
                    }
                    $log_msg .= '申请登录，动态码：' . $sms_captcha . '。';
                    break;
                case '3':
                    if (config('sms_password') != 1) {
                        $state = '系统没有开启手机找回密码功能';
                    }
                    if (empty($member)) {//检查手机号是否已绑定会员
                        $state = '当前手机号未注册，请检查号码是否正确。';
                    }
                    $log_msg .= '申请重置登录密码，动态码：' . $sms_captcha . '。';
                    break;
                default:
                    $state = '参数错误';
                    break;
            }

            if ($state == 'true') {
                $smslog_model = model('smslog');
                $result = $smslog_model->sendSms($sms_mobile, $log_msg, $log_type, $sms_captcha, $member['member_id'], $member['member_name']);

                if ($result['state']) {
                    ds_json_encode(10000, '', array('sms_time' => 60));
                    exit;
                } else {
                    $state = $result['message'];
                }
            }
        }
        ds_json_encode(10001, $state);
    }
    /**
     * 验证注册动态码
     */
    public function check_sms_captcha(){
        $state = '验证失败';
        $phone = input('get.phone');
        $captcha = input('get.captcha');
        $log_type=input('get.type');
        if (strlen($phone) == 11){
            $state = 'true';
            $condition = array();
            $condition['smslog_phone'] = $phone;
            $condition['smslog_captcha'] = $captcha;
            $condition['smslog_type'] = $log_type;
            $smslog_model = model('smslog');
            $sms_log = $smslog_model->getSmsInfo($condition);
            if(empty($sms_log) || ($sms_log['smslog_smstime'] < TIMESTAMP-1800)) {//半小时内进行验证为有效
                $state = '动态码错误或已过期，重新输入';
                ds_json_encode(10001, $state);
            }
            ds_json_encode(10000, '', $state);
        }
        ds_json_encode(10001, $state);
    }



    /**
     * 手机注册
     */
    public function sms_register(){
        $phone = input('post.phone');
        $captcha = input('post.captcha');
        $password = input('post.password');
        $client = input('post.client');
        $inviter_id = input('post.inviter_id');
        $logic_connect_api = model('connectapi','logic');
        $state_data = $logic_connect_api->smsRegister($phone, $captcha, $password, $client,$inviter_id);

        if($state_data['state']=='1'){
            ds_json_encode(10000, '', $state_data);
        } else {
            ds_json_encode(10001, $state_data['msg']);
        }
    }
    
    /**
     * 手机验证码登录
     */
    public function sms_login()
    {
        $member_mobile = input('post.usermobile');
        $mobilecode = input('post.mobilecode');
        
        if(empty($member_mobile) || empty($mobilecode)){
            ds_json_encode(10001, '参数错误');
        }
        if (config('sms_login') != 1) {
            ds_json_encode(10001,'系统没有开启手机登录功能');
        }
        $condition = array();
        $condition['smslog_phone'] = $member_mobile;
        $condition['smslog_captcha'] = $mobilecode;
        $condition['smslog_type'] = 2;
        $smslog_model = model('smslog');
        $sms_log = $smslog_model->getSmsInfo($condition);
        if (empty($sms_log) || ($sms_log['smslog_smstime'] < TIMESTAMP - 1800)) {//半小时内进行验证为有效
            ds_json_encode(10001, '动态码错误或已过期，重新输入');
        }
        $member_model = model('member');
        $member = $member_model->getMemberInfo(array('member_mobile' => $member_mobile)); //获取当前手机号的用户信息
        if (!empty($member)) {
            $token = $member_model->getBuyerToken($member['member_id'], $member['member_name'], input('post.client'));
            if($token) {
                ds_json_encode(10000,'',array('username' => $member['member_name'], 'key' => $token));
            }else{
                ds_json_encode(10001, '系统错误');
            }
        }else{
            ds_json_encode(10001, '手机号不存在');
        }
        
    }


    /**
     * 手机找回密码
     */
    public function find_password(){
        $phone = input('post.phone');
        $captcha = input('post.captcha');
        $password = input('post.password');
        $client = input('post.client');
        $logic_connect_api = model('connectapi','logic');
        $state_data = $logic_connect_api->smsPassword($phone, $captcha, $password, $client);
        
        if($state_data['state']){
            unset($state_data['state']);
            unset($state_data['msg']);
            ds_json_encode(10000, '', $state_data);
        } else {
            ds_json_encode(10001, $state_data['msg']);
        }
        
    }


    /**
     * 登录开关状态
     */
    public function get_state() {
        $logic_connect_api = model('connectapi','logic');
        $state_array = $logic_connect_api->getStateInfo();

        $key = input('get.t');
        if(trim($key) != '' && array_key_exists($key,$state_array)){
            ds_json_encode(10000, '', $state_array[$key]);
        } else {
            ds_json_encode(10001, '参数错误');
        }
    }


}