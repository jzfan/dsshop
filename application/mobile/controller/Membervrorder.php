<?php
namespace app\mobile\controller;
use think\Db;
class Membervrorder extends MobileMember
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 订单列表
     */
    public function order_list()
    {


        $vrorder_model = model('vrorder');

        $condition = array();
        $condition['buyer_id'] = $this->member_info['member_id'];
        if (preg_match('/^\d{10,20}$/', input('post.order_key'))) {
            $condition['order_sn'] = input('post.order_key');
        }
        elseif (input('post.order_key') != '') {
            $condition['goods_name'] = array('like', '%' . input('post.order_key') . '%');
        }
        if (input('post.state_type') != '') {
            $condition['order_state'] = str_replace(array('state_new', 'state_pay'), array(
                                                                                       ORDER_STATE_NEW, ORDER_STATE_PAY
                                                                                   ), input('post.state_type'));
        }
        $order_list = $vrorder_model->getVrorderList($condition, $this->pagesize, '*', 'order_id desc');

        foreach ($order_list as $key => $order) {
            //显示取消订单
            $order_list[$key]['if_cancel'] = $vrorder_model->getVrorderOperateState('buyer_cancel', $order);

            //显示支付
            $order_list[$key]['if_pay'] = $vrorder_model->getVrorderOperateState('payment', $order);

            //显示评价
            $order_list[$key]['if_evaluation'] = $vrorder_model->getVrorderOperateState('evaluation', $order);

            $order_list[$key]['goods_image_url'] = goods_cthumb($order['goods_image'], 240);

        }

        $result= array_merge(array('order_list' => $order_list), mobile_page($vrorder_model->page_info));
        ds_json_encode(10000, '',$result);
    }

    public function order_info()
    {
        $order_id = intval(input('get.order_id'));
        if ($order_id <= 0) {
            ds_json_encode(10001,'订单不存在');
        }
        $vrorder_model = model('vrorder');
        $condition = array();
        $condition['order_id'] = $order_id;
        $condition['buyer_id'] = $this->member_info['member_id'];
        $order_info = $vrorder_model->getVrorderInfo($condition);
        if (empty($order_info) || $order_info['delete_state'] == ORDER_DEL_STATE_DROP) {
            ds_json_encode(10001,'订单不存在');
        }
        $order_list = array();
        $order_list[$order_id] = $order_info;

        //显示取消订单
        $order_info['if_cancel'] = $vrorder_model->getVrorderOperateState('buyer_cancel', $order_info);

        //显示评价
        $order_info['if_evaluation'] = $vrorder_model->getVrorderOperateState('evaluation', $order_info);

        //显示退款
        $order_info['if_refund'] = $vrorder_model->getVrorderOperateState('refund', $order_info);

        $order_info['goods_image_url'] = goods_cthumb($order_info['goods_image'], 240);


        $order_info['vr_indate'] = $order_info['vr_indate'] ? date('Y-m-d', $order_info['vr_indate']) : '';
        $order_info['add_time'] = date('Y-m-d', $order_info['add_time']);
        $order_info['payment_time'] = $order_info['payment_time'] ? date('Y-m-d', $order_info['payment_time']) : '';
        $order_info['finnshed_time'] = $order_info['finnshed_time'] ? date('Y-m-d', $order_info['finnshed_time']) : '';

        $order_info['if_resend'] = $order_info['order_state'] == ORDER_STATE_PAY ? true : false;
        //取兑换码列表
        $vr_code_list = $vrorder_model->getShowVrordercodeList(array('order_id' => $order_info['order_id']));
        $order_info['code_list'] = $vr_code_list ? $vr_code_list : array();

        ds_json_encode(10000, '',array('order_info' => $order_info));
    }

    /**
     * 取消订单
     */
    public function order_cancel()
    {
        $vrorder_model = model('vrorder');
        $condition = array();
        $condition['order_id'] = intval(input('post.order_id'));
        $condition['buyer_id'] = $this->member_info['member_id'];
        $order_info = $vrorder_model->getVrorderInfo($condition);

        $if_allow = $vrorder_model->getVrorderOperateState('buyer_cancel', $order_info);
        if (!$if_allow) {
            ds_json_encode(10001, '无权操作');
        }

        $logic_vrorder = model('vrorder','logic');
        $result = $logic_vrorder->changeOrderStateCancel($order_info, 'buyer', '其它原因');

        if (!$result['code']) {
            ds_json_encode(10001, $result['msg']);
        }
        else {
            ds_json_encode(10000,'',1);
        }
    }

    /**
     * 发送兑换码到手机
     */
    public function resend()
    {
        if (!preg_match('/^[\d]{11}$/', input('post.buyer_phone'))) {
            ds_json_encode(10001,'请正确填写手机号');
        }
        $order_id = intval(input('post.order_id'));
        if ($order_id <= 0) {
            ds_json_encode(10001,'参数错误');
        }

        $vrorder_model = model('vrorder');

        $condition = array();
        $condition['order_id'] = $order_id;
        $condition['buyer_id'] = $this->member_info['member_id'];
        $order_info = $vrorder_model->getVrorderInfo($condition);
        if (empty($order_info) && $order_info['order_state'] != ORDER_STATE_PAY) {
            ds_json_encode(10001,'订单信息发生错误');
        }
        if ($order_info['vr_send_times'] >= 5) {
            ds_json_encode(10001,'您发送的次数过多，无法发送');
        }

        //发送兑换码到手机
        $param = array(
            'order_id' => $order_id, 'buyer_id' => $this->member_info['member_id'],
            'buyer_phone' => input('post.buyer_phone'), 'goods_name' => $order_info['goods_name']
        );
        \mall\queue\QueueClient::push('sendVrCode', $param);

        $vrorder_model->editVrorder(array('vr_send_times' => Db::raw('vr_send_times+1')), array('order_id' => $order_id));

        ds_json_encode(10000,'',1);
    }
}