<?php

namespace app\mobile\controller;


class Article extends MobileHome
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 文章列表
     */
    public function article_list() {
        if (input('param.ac_id') && intval(input('param.ac_id')) > 0) {
            $articleclass_model = model('articleclass');
            $article_model = model('article');
            $condition = array();

            $child_class_list = $articleclass_model->getChildClass(intval(input('param.ac_id')));
            $ac_ids = array();
            if (!empty($child_class_list) && is_array($child_class_list)) {
                foreach ($child_class_list as $v) {
                    $ac_ids[] = $v['ac_id'];
                }
            }
            $ac_ids = implode(',', $ac_ids);
            $condition['ac_id'] = array('in', $ac_ids);
            $condition['article_show'] = '1';
            $article_list = $article_model->getArticleList($condition);
            $article_type_name = $this->article_type_name($ac_ids);
            ds_json_encode(10000, '', array('article_list' => $article_list, 'article_type_name' => $article_type_name));
        } else {
            ds_json_encode(10001, '缺少参数:文章类别编号');
        }
    }

    /**
     * 根据类别编号获取文章类别信息
     */
    private function article_type_name() {
        if(!empty(input('param.ac_id')) && intval(input('param.ac_id')) > 0) {
            $articleclass_model = model('articleclass');
            $article_class = $articleclass_model->getOneArticleclass(intval(input('param.ac_id')));
            return ($article_class['ac_name']);
        }
        else {
            return ('缺少参数:文章类别编号');
        }
    }

    /**
     * 单篇文章显示
     */
    public function article_show() {
        $article_model = model('article');
        $article_id = intval(input('param.article_id'));
        if ($article_id > 0) {
            $condition = array();
            $condition['article_id'] = $article_id;
            $article = $article_model->getOneArticle($condition);
            if (empty($article)) {
                ds_json_encode(10001, '文章不存在');
            } else {
                $this->add_points($article_id);
                ds_json_encode(10000, '', $article);
            }
        } else {
            ds_json_encode(10001, '缺少参数:文章编号');
        }
    }


    protected function add_points($article_id)
    {
        //检测是否已经赠送过
        //member_id,article_id,created_at member_read_log
        $readLog = model("member_read_log")->get(array("member_id"=>$this->member_info['member_id'],"article_id"=>$article_id));

        if (is_null($readLog)) {
            $data = array('pl_memberid'=>$this->member_info['member_id'],'pl_membername'=>$this->member_info['member_name']);
            //阅读赠送积分
            model("Points")->savePointslog("read",$data);
            model("member_read_log")->create(array(
                "member_id"     =>  $this->member_info['member_id'],
                "article_id"    =>  $article_id,
                "created_at"    =>  date('Y-m-d H:i:s')
            ));
        }

    }

}